import { useState } from "react";
import { SafeAreaView } from "react-native-safe-area-context";
import { FlatList, Image, Dimensions, RefreshControl, Text, View, StyleSheet } from "react-native";
import { Link, useRouter } from 'expo-router';
// import { TailwindProvider } from 'tailwindcss-react-native';

import { images } from "../constants";
// import useAppwrite from "../../lib/useAppwrite";
// import { getAllPosts, getLatestPosts } from "../../lib/appwrite";
import { EmptyState, SearchInput, Trending, VideoCard } from "../components";


const { width, height } = Dimensions.get('window');
const guidelineBaseWidth = 350;
const guidelineBaseHeight = 680;


const scale = size => (width / guidelineBaseWidth) * size;
const verticalScale = size => (height / guidelineBaseHeight) * size;
const moderateScale = (size, factor = 0.5) => size + (scale(size) - size) * factor;

const products = [
    {
        id: '1',
        name: 'TEXTURED DROP EARRINGS',
        price: 'EGP 220.00',
        image: 'https://www.accessorize.com/dw/image/v2/BDLV_PRD/on/demandware.static/-/Sites-accessorize-master-catalog/default/dw77c7e0a6/images/large/03_30105460021_2.jpg?sw=663&sh=848&sm=cut',
    },
    {
        id: '2',
        name: 'MATTE OVAL EARRINGS',
        price: 'EGP 185.00',
        image: 'https://www.accessorize.com/dw/image/v2/BDLV_PRD/on/demandware.static/-/Sites-accessorize-master-catalog/default/dw6c9d4ae9/images/large/02_30103170008_2.jpg?sw=663&sh=848&sm=cut',


    },
    {
        id: '3',
        name: 'INLAY HOOP EARRINGS',
        price: 'EGP 230.00',
        image: 'https://www.accessorize.com/dw/image/v2/BDLV_PRD/on/demandware.static/-/Sites-accessorize-master-catalog/default/dw1b393395/images/large/01_30105430004_1.jpg?sw=663&sh=848&sm=cut',

    },

    {
        id: '4',
        name: '2-PACK SEED BEAD RINGS',
        price: 'EGP 320.00',
        image: 'https://www.accessorize.com/dw/image/v2/BDLV_PRD/on/demandware.static/-/Sites-accessorize-master-catalog/default/dweaa8489c/images/large/01_30108020021_1.jpg?sw=663&sh=848&sm=cut'
        ,

    },
    {
        id: '5',
        name: '3-PACK MOLTEN STUDS',
        price: 'EGP 230.00',
        image: 'https://www.accessorize.com/dw/image/v2/BDLV_PRD/on/demandware.static/-/Sites-accessorize-master-catalog/default/dwf6271341/images/large/03_30105420008_2.jpg?sw=663&sh=848&sm=cut',
    },
]

const Home = () => {
    const [searchQuery, setSearchQuery] = useState(''); // State to store search input


    const [accessories, setAccessories] = useState(products);
    const router = useRouter();

    const filteredProducts = products.filter((product) =>
        product.name.toLowerCase().includes(searchQuery.toLowerCase())
    );
    //   const { data: posts, refetch } = useAppwrite(getAllPosts);
    //   const { data: latestPosts } = useAppwrite(getLatestPosts);

    const [refreshing, setRefreshing] = useState(false);

    const onRefresh = async () => {
        setRefreshing(true);
        await refetch();
        setRefreshing(false);
    };

    // one flatlist
    // with list header
    // and horizontal flatlist

    //  we cannot do that with just scrollview as there's both horizontal and vertical scroll (two flat lists, within trending)

    return (
        <SafeAreaView style={styles.container}>
            <FlatList
                horizontal={true}
                data={filteredProducts}
                keyExtractor={(item) => item.$id}
                renderItem={({ item }) => (
                    <View style={styles.card}>
                        <Text style={styles.name}>{item.name}</Text>
                        <Text style={styles.price}>${item.price}</Text>
                    </View>
                )}
                ListHeaderComponent={() => (
                    <View className="flex my-6 px-4 space-y-6">
                        <View className="flex justify-between items-start flex-row mb-6">
                            <View>
                                <Text style={styles.text}>
                                    Welcome Back
                                </Text>
                                <Text style={styles.text}>
                                    JSMastery
                                </Text>
                            </View>

                            <View className="mt-1.5">
                                <Image
                                    source={images.logoSmall}
                                    className="w-9 h-10"
                                    resizeMode="contain"
                                />
                            </View>
                        </View>

                        <SearchInput />

                        <View className="w-full flex-1 pt-5 pb-8">
                            <Text style={styles.text}>
                                Latest Videos
                            </Text>

                            {/* <Trending posts={latestPosts ?? []} /> */}
                        </View>
                    </View>
                )}
                ListEmptyComponent={() => (
                    <EmptyState
                        title="No Videos Found"
                        subtitle="No videos created yet"
                    />
                )}
                refreshControl={
                    <RefreshControl refreshing={refreshing} onRefresh={onRefresh} />
                }
            />
        </SafeAreaView>
    );
};
const styles = StyleSheet.create({
    container: {
        // alignItems: "center",
        // justifyContent: "center",
        paddingTop: 70,
        flex: 1,
        backgroundColor: '#232020',
        width: width,
    },
    text: {
        color: '#F4F4F4',

    },
    card: {
        backgroundColor: 'white',
        borderRadius: 8,
        padding: 16,
        margin: 10,
        shadowColor: '#000',
        shadowOffset: { width: 0, height: 2 },
        shadowOpacity: 0.1,
        shadowRadius: 8,
        elevation: 5,
        width: width*0.40, // Set a fixed width
        height:'20%',

    },
    name: {
        fontSize: 18,
        fontWeight: 'bold',
    },
    price: {
        fontSize: 16,
        color: '#333',
    },

})

export default Home;
